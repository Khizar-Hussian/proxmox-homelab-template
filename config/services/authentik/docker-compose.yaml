version: '3.8'

# ╔══════════════════════════════════════════════════════════════════════════════╗
# ║                      AUTHENTIK SSO & IDENTITY PROVIDER                      ║
# ╚══════════════════════════════════════════════════════════════════════════════╝
#
# 🔐 Modern authentication and identity provider with SSO capabilities
# 📝 Access: https://auth.yourdomain.com
# 🔑 Admin: admin@yourdomain.com / [AUTHENTIK_ADMIN_PASSWORD from environment]

services:
  # PostgreSQL database for Authentik
  postgresql:
    image: postgres:13-alpine
    container_name: authentik-db
    restart: unless-stopped
    
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: authentik
      POSTGRES_DB: authentik
      
    volumes:
      - postgresql-data:/var/lib/postgresql/data
      
    networks:
      - authentik
      
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
      
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
          
    labels:
      - "com.homelab.service=authentik-db"
      - "com.homelab.category=database"

  # Redis cache for Authentik
  redis:
    image: redis:alpine
    container_name: authentik-redis
    restart: unless-stopped
    
    command: --save 60 1 --loglevel warning
    
    volumes:
      - redis-data:/data
      
    networks:
      - authentik
      
    # Health check
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
      
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
          
    labels:
      - "com.homelab.service=authentik-redis"
      - "com.homelab.category=cache"

  # Authentik server
  server:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-server
    hostname: auth.${DOMAIN:-homelab.local}
    restart: unless-stopped
    
    command: server
    
    ports:
      - "9000:9000"   # HTTP interface
      - "9443:9443"   # HTTPS interface
      
    environment:
      # Core configuration
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      
      # Security configuration
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      AUTHENTIK_ERROR_REPORTING__ENABLED: true
      
      # Email configuration (optional)
      AUTHENTIK_EMAIL__HOST: ${SMTP_HOST:-localhost}
      AUTHENTIK_EMAIL__PORT: ${SMTP_PORT:-587}
      AUTHENTIK_EMAIL__USERNAME: ${SMTP_USER:-}
      AUTHENTIK_EMAIL__PASSWORD: ${SMTP_PASSWORD:-}
      AUTHENTIK_EMAIL__USE_TLS: ${SMTP_TLS:-false}
      AUTHENTIK_EMAIL__FROM: ${SMTP_FROM:-authentik@${DOMAIN}}
      
      # External URL configuration
      AUTHENTIK_LISTEN__HTTP: 0.0.0.0:9000
      AUTHENTIK_LISTEN__HTTPS: 0.0.0.0:9443
      
    volumes:
      # Media files and certificates
      - authentik-media:/media
      - authentik-certs:/certs
      - authentik-custom-templates:/templates
      
      # Custom configuration
      - ./config:/config:ro
      
    depends_on:
      - postgresql
      - redis
      
    networks:
      - authentik
      - homelab
      
    # Health check
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9000/-/health/live/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    labels:
      - "com.homelab.service=authentik-server"
      - "com.homelab.category=authentication"

  # Authentik worker
  worker:
    image: ghcr.io/goauthentik/server:latest
    container_name: authentik-worker
    restart: unless-stopped
    
    command: worker
    
    environment:
      # Core configuration (same as server)
      AUTHENTIK_REDIS__HOST: redis
      AUTHENTIK_POSTGRESQL__HOST: postgresql
      AUTHENTIK_POSTGRESQL__USER: authentik
      AUTHENTIK_POSTGRESQL__NAME: authentik
      AUTHENTIK_POSTGRESQL__PASSWORD: ${POSTGRES_PASSWORD}
      AUTHENTIK_SECRET_KEY: ${AUTHENTIK_SECRET_KEY}
      
    volumes:
      # Shared volumes with server
      - authentik-media:/media
      - authentik-certs:/certs
      - authentik-custom-templates:/templates
      
      # Docker socket for outpost management
      - /var/run/docker.sock:/var/run/docker.sock
      
      # Custom configuration
      - ./config:/config:ro
      
    user: root
    
    depends_on:
      - postgresql
      - redis
      
    networks:
      - authentik
      
    # Resource limits
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
          
    labels:
      - "com.homelab.service=authentik-worker"
      - "com.homelab.category=authentication"

# Persistent volumes
volumes:
  postgresql-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgresql
      
  redis-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
      
  authentik-media:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/media
      
  authentik-certs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/certs
      
  authentik-custom-templates:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/templates

# Network configuration
networks:
  authentik:
    driver: bridge
    
  homelab:
    external: true